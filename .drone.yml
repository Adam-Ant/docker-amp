pipeline:
  build:
    image: docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - docker build --pull --no-cache -t amp-base-dev .

  test:
    image: docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    secrets: [ LICENCE ]
    commands:
      - apk add --no-cache curl
      - CON_NAME=$(docker run -dt --rm -e "EXTRAS=+MinecraftModule.Java.MaxHeapSizeMB 256" -e "MODULE=Minecraft" -e LICENCE amp-base-dev)
      # Wait for AMP to install and start!
      - timeout -t 90 docker logs -f $$CON_NAME &
      - sleep 30
      - curl -sSL --max-time 2 --retry 6 --retry-delay 10 $(docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $$CON_NAME):8080 > /dev/null
      - docker stop -t 30 $$CON_NAME
      # Wait for it logging to exit
      - wait $(pidof timeout) || true

  publish:
    image: docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    secrets: [ DOCKER_USER, DOCKER_PASS ]
    when:
      event: [push, tag, deployment]
    commands:
       - docker tag amp-base-dev adamant/amp
       - docker login -u $DOCKER_USER -p $DOCKER_PASS
       - docker push adamant/amp
       - docker rmi amp-base-dev adamant/amp
       - echo "CONGRATS! SUCCESSFULLY BUILT AMP BASE IMAGE!"

  downstream:
    image: plugins/downstream
    secrets: [ DOWNSTREAM_TOKEN ]
    server: https://drone.adam-ant.co.uk
    fork: true
    repositories:
      - Adam-Ant/docker-minecraft-amp
      - Adam-Ant/docker-ark-amp
      - Adam-Ant/docker-starbound-amp
    when:
      event:  [ push, tag, deployment ]
      status: [ success ]
