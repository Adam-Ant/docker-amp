pipeline:

  build:
    image: spritsail/docker-build
    volumes: [ '/var/run/docker.sock:/var/run/docker.sock' ]
    repo: amp-dev

  test:
    image: docker
    volumes: [ '/var/run/docker.sock:/var/run/docker.sock' ]
    secrets: [ LICENCE ]
    commands:
      - apk add --no-cache curl
      - CON_NAME=$(docker run -dt --rm -e "EXTRAS=+MinecraftModule.Java.MaxHeapSizeMB 256" -e "MODULE=Minecraft" -e LICENCE amp-dev)
      # Wait for AMP to install and start!
      - timeout -t 90 docker logs -f $$CON_NAME &
      - sleep 30
      - IPADDR="$(docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $$CON_NAME)"
      - curl -sSL --max-time 2 --retry 6 --retry-delay 10 --retry-connrefused $$IPADDR:8080 > /dev/null
      - docker stop -t 30 $$CON_NAME
      # Wait for it logging to exit
      - wait $(pidof timeout) || true

  publish:
      image: spritsail/docker-publish
      when: { branch: [ master ], event: [ push, tag, deployment ] }
      volumes: [ '/var/run/docker.sock:/var/run/docker.sock' ]
      secrets: [ docker_username, docker_password, microbadger_token ]
      from: amp-dev
      repo: spritsail/amp

  downstream:
    image: plugins/downstream
    secrets: [ downstream_token ]
    when:
      event:  [ push, tag, deployment ]
      status: [ success ]
      branch: [ master ]
    server: https://drone.spritsail.io
    fork: true
    repositories:
      - spritsail/amp-minecraft
      #- spritsail/amp-ark
      #- spritsail/amp-starbound

  notify:
    image: appleboy/drone-telegram
    when: { status: [ success, failure ] }
    secrets: [ telegram_token, telegram_to ]
    message: |
      *{{repo.owner}}/{{repo.name}} [{{commit.branch}}]*: Build #{{build.number}}: *{{uppercase build.status}}*
      {{build.link}}
